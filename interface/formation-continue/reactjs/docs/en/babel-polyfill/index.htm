<!DOCTYPE html><html lang="en"><head><meta charSet="utf-8"/><meta http-equiv="X-UA-Compatible" content="IE=edge"/><title>@babel/polyfill · Babel</title><meta name="viewport" content="width=device-width, initial-scale=1.0"/><meta name="generator" content="Docusaurus"/><meta name="description" content="&gt; 🚨 As of Babel 7.4.0, this package has been deprecated in favor of directly including `core-js/stable` (to polyfill ECMAScript features):"/><meta name="docsearch:language" content="en"/><meta property="og:title" content="@babel/polyfill · Babel"/><meta property="og:type" content="website"/><meta property="og:url" content="https://babeljs.io/"/><meta property="og:description" content="&gt; 🚨 As of Babel 7.4.0, this package has been deprecated in favor of directly including `core-js/stable` (to polyfill ECMAScript features):"/><meta property="og:image" content="https://babeljs.io/img/ogImage.png"/><meta name="twitter:card" content="summary"/><link rel="shortcut icon" href="/img/favicon.png"/><link rel="stylesheet" href="https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.css"/><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/tomorrow.min.css"/><link rel="alternate" type="application/atom+xml" href="https://babeljs.io/blog/atom.xml" title="Babel Blog ATOM Feed"/><link rel="alternate" type="application/rss+xml" href="https://babeljs.io/blog/feed.xml" title="Babel Blog RSS Feed"/><script>
              (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
              (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
              m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
              })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

              ga('create', 'UA-114990275-1', 'auto');
              ga('send', 'pageview');
            </script><script type="text/javascript" src="https://unpkg.com/clipboard@2.0.0/dist/clipboard.min.js" defer=""></script><script type="text/javascript" src="/js/code-blocks-buttons.js" defer=""></script><script type="text/javascript" src="/scripts/repl-page-hacks.js" defer=""></script><script src="https://unpkg.com/vanilla-back-to-top@7.1.14/dist/vanilla-back-to-top.min.js"></script><script>
        document.addEventListener('DOMContentLoaded', function() {
          addBackToTop(
            {"zIndex":100}
          )
        });
        </script><script src="/js/scrollSpy.js"></script><link href='https://d33wubrfki0l68.cloudfront.net/css/dd8d7aea0f6e9f6a090eaed93f30139b69734d27/css/main.css' rel='stylesheet'/><script src="/js/codetabs.js"></script></head><body class="sideNavVisible separateOnPageNav"><div class="fixedHeaderContainer"><div class="headerWrapper wrapper"><header><a href="/"><img class="logo" src="https://d33wubrfki0l68.cloudfront.net/7a197cfe44548cc1a3f581152af70a3051e11671/78df8/img/babel.svg" alt="Babel"/></a><div class="navigationWrapper navigationSlider"><nav class="slidingNav"><ul class="nav-site nav-site-internal"><li class="siteNavGroupActive"><a href="/docs/en/" target="_self">Docs</a></li><li class=""><a href="/setup" target="_self">Setup</a></li><li class=""><a href="/repl" target="_self">Try it out</a></li><li class=""><a href="/videos" target="_self">Videos</a></li><li class=""><a href="/blog/" target="_self">Blog</a></li><li class="navSearchWrapper reactNavSearchWrapper"><input type="text" id="search_input_react" placeholder="Search" title="Search"/></li><li class=""><a href="https://opencollective.com/babel" target="_self">Donate</a></li><li class=""><a href="/team" target="_self">Team</a></li><li class=""><a href="https://github.com/babel/babel" target="_self">GitHub</a></li></ul></nav></div></header></div></div><div class="navPusher"><div class="docMainWrapper wrapper"><div class="docsNavContainer" id="docsNav"><nav class="toc"><div class="toggleNav"><section class="navWrapper wrapper"><div class="navBreadcrumb wrapper"><div class="navToggle" id="navToggler"><div class="hamburger-menu"><div class="line1"></div><div class="line2"></div><div class="line3"></div></div></div><h2><i>›</i><span>Integration Packages</span></h2><div class="tocToggler" id="tocToggler"><i class="icon-toc"></i></div></div><div class="navGroups"><div class="navGroup"><h3 class="navGroupCategoryTitle">Guides</h3><ul class=""><li class="navListItem"><a class="navItem" href="/docs/en/">What is Babel?</a></li><li class="navListItem"><a class="navItem" href="/docs/en/usage">Usage Guide</a></li><li class="navListItem"><a class="navItem" href="/docs/en/configuration">Configure Babel</a></li><li class="navListItem"><a class="navItem" href="/docs/en/learn">Learn ES2015</a></li><li class="navListItem"><a class="navItem" href="/docs/en/v7-migration">Upgrade to Babel 7</a></li></ul></div><div class="navGroup"><h3 class="navGroupCategoryTitle">Config Reference</h3><ul class=""><li class="navListItem"><a class="navItem" href="/docs/en/config-files">Config Files</a></li><li class="navListItem"><a class="navItem" href="/docs/en/options">Config Options</a></li><li class="navListItem"><a class="navItem" href="/docs/en/presets">Presets</a></li><li class="navListItem"><a class="navItem" href="/docs/en/plugins">Plugins</a></li><li class="navListItem"><a class="navItem" href="/docs/en/plugins-list">Plugins List</a></li><li class="navListItem"><a class="navItem" href="/docs/en/assumptions">Compiler assumptions</a></li></ul></div><div class="navGroup"><h3 class="navGroupCategoryTitle">Presets</h3><ul class=""><li class="navListItem"><a class="navItem" href="/docs/en/babel-preset-env">@babel/preset-env</a></li><li class="navListItem"><a class="navItem" href="/docs/en/babel-preset-react">@babel/preset-react</a></li><li class="navListItem"><a class="navItem" href="/docs/en/babel-preset-typescript">@babel/preset-typescript</a></li><li class="navListItem"><a class="navItem" href="/docs/en/babel-preset-flow">@babel/preset-flow</a></li></ul></div><div class="navGroup"><h3 class="navGroupCategoryTitle">Misc</h3><ul class=""><li class="navListItem"><a class="navItem" href="/docs/en/roadmap">Roadmap</a></li><li class="navListItem"><a class="navItem" href="/docs/en/caveats">Caveats</a></li><li class="navListItem"><a class="navItem" href="/docs/en/features-timeline">Features Timeline</a></li><li class="navListItem"><a class="navItem" href="/docs/en/faq">FAQ</a></li><li class="navListItem"><a class="navItem" href="/docs/en/editors">Editors</a></li></ul></div><div class="navGroup"><h3 class="navGroupCategoryTitle">Integration Packages</h3><ul class=""><li class="navListItem"><a class="navItem" href="/docs/en/babel-cli">@babel/cli</a></li><li class="navListItem navListItemActive"><a class="navItem" href="/docs/en/babel-polyfill">@babel/polyfill</a></li><li class="navListItem"><a class="navItem" href="/docs/en/babel-plugin-transform-runtime">@babel/plugin-transform-runtime</a></li><li class="navListItem"><a class="navItem" href="/docs/en/babel-register">@babel/register</a></li><li class="navListItem"><a class="navItem" href="/docs/en/babel-standalone">@babel/standalone</a></li></ul></div><div class="navGroup"><h3 class="navGroupCategoryTitle">Tooling Packages</h3><ul class=""><li class="navListItem"><a class="navItem" href="/docs/en/babel-parser">@babel/parser</a></li><li class="navListItem"><a class="navItem" href="/docs/en/babel-core">@babel/core</a></li><li class="navListItem"><a class="navItem" href="/docs/en/babel-generator">@babel/generator</a></li><li class="navListItem"><a class="navItem" href="/docs/en/babel-code-frame">@babel/code-frame</a></li><li class="navListItem"><a class="navItem" href="/docs/en/babel-runtime">@babel/runtime</a></li><li class="navListItem"><a class="navItem" href="/docs/en/babel-template">@babel/template</a></li><li class="navListItem"><a class="navItem" href="/docs/en/babel-traverse">@babel/traverse</a></li><li class="navListItem"><a class="navItem" href="/docs/en/babel-types">@babel/types</a></li></ul></div><div class="navGroup"><h3 class="navGroupCategoryTitle">Helper Packages</h3><ul class=""><li class="navListItem"><a class="navItem" href="/docs/en/babel-helper-compilation-targets">helper-compilation-targets</a></li><li class="navListItem"><a class="navItem" href="/docs/en/babel-helper-module-imports">helper-module-imports</a></li></ul></div></div></section></div><script>
            var coll = document.getElementsByClassName('collapsible');
            var checkActiveCategory = true;
            for (var i = 0; i < coll.length; i++) {
              var links = coll[i].nextElementSibling.getElementsByTagName('*');
              if (checkActiveCategory){
                for (var j = 0; j < links.length; j++) {
                  if (links[j].classList.contains('navListItemActive')){
                    coll[i].nextElementSibling.classList.toggle('hide');
                    coll[i].childNodes[1].classList.toggle('rotate');
                    checkActiveCategory = false;
                    break;
                  }
                }
              }

              coll[i].addEventListener('click', function() {
                var arrow = this.childNodes[1];
                arrow.classList.toggle('rotate');
                var content = this.nextElementSibling;
                content.classList.toggle('hide');
              });
            }

            document.addEventListener('DOMContentLoaded', function() {
              createToggler('#navToggler', '#docsNav', 'docsSliderActive');
              createToggler('#tocToggler', 'body', 'tocActive');

              var headings = document.querySelector('.toc-headings');
              headings && headings.addEventListener('click', function(event) {
                var el = event.target;
                while(el !== headings){
                  if (el.tagName === 'A') {
                    document.body.classList.remove('tocActive');
                    break;
                  } else{
                    el = el.parentNode;
                  }
                }
              }, false);

              function createToggler(togglerSelector, targetSelector, className) {
                var toggler = document.querySelector(togglerSelector);
                var target = document.querySelector(targetSelector);

                if (!toggler) {
                  return;
                }

                toggler.onclick = function(event) {
                  event.preventDefault();

                  target.classList.toggle(className);
                };
              }
            });
        </script></nav></div><div class="container mainContainer docsContainer"><div class="wrapper"><div class="post"><header class="postHeader"><a class="edit-page-link button" href="https://github.com/babel/website/blob/main/docs/polyfill.md" target="_blank" rel="noreferrer noopener">Edit</a><h1 id="__docusaurus" class="postHeaderTitle">@babel/polyfill</h1></header><article><div><span><blockquote>
<p>🚨 As of Babel 7.4.0, this package has been deprecated in favor of directly including <code>core-js/stable</code> (to polyfill ECMAScript features):</p>
<pre><code class="hljs css language-js"><span class="hljs-keyword">import</span> <span class="hljs-string">"core-js/stable"</span>;
</code></pre>
<p>If you are compiling generators or async function to ES5, and you are using a version of <code>@babel/core</code> or <code>@babel/plugin-transform-regenerator</code> older than <code>7.18.0</code>, you must also load the <a href="https://github.com/facebook/regenerator/tree/main/packages/runtime"><code>regenerator runtime</code></a> package. It is automatically loaded when using <code>@babel/preset-env</code>'s <code>useBuiltIns: &quot;usage&quot;</code> option or <code>@babel/plugin-transform-runtime</code>.</p>
</blockquote>
<p>Babel includes a <a href="https://en.wikipedia.org/wiki/Polyfill_(programming)">polyfill</a> that includes a custom <a href="https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js">regenerator runtime</a> and <a href="https://github.com/zloirock/core-js">core-js</a>.</p>
<p>This will emulate a full ES2015+ environment (no &lt; Stage 4 proposals) and is intended to be used in an application rather than a library/tool.
(this polyfill is automatically loaded when using <code>babel-node</code>).</p>
<p>This means you can use new built-ins like <code>Promise</code> or <code>WeakMap</code>, static methods like <code>Array.from</code> or <code>Object.assign</code>, instance methods like <code>Array.prototype.includes</code>, and generator functions (provided you use the <a href="/docs/en/babel-plugin-transform-regenerator">regenerator</a> plugin). The polyfill adds to the global scope as well as native prototypes like <code>String</code> in order to do this.</p>
<h2><a class="anchor" aria-hidden="true" id="installation"></a><a href="#installation" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<pre><code class="hljs css language-sh">npm install --save @babel/polyfill
</code></pre>
<blockquote>
<p>Because this is a polyfill (which will run before your source code), we need it to be a <code>dependency</code>, not a <code>devDependency</code></p>
</blockquote>
<h2><a class="anchor" aria-hidden="true" id="size"></a><a href="#size" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Size</h2>
<p>The polyfill is provided as a convenience but you should use it with <a href="/docs/en/babel-preset-env"><code>@babel/preset-env</code></a> and the <a href="/docs/en/babel-preset-env#usebuiltins"><code>useBuiltIns</code> option</a> so that it doesn't include the whole polyfill which isn't always needed. Otherwise, we would recommend you import the individual polyfills manually.</p>
<h2><a class="anchor" aria-hidden="true" id="tc39-proposals"></a><a href="#tc39-proposals" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>TC39 Proposals</h2>
<p>If you need to use a proposal that is not Stage 4, <code>@babel/polyfill</code> will not automatically import those for you. You will have to import those from another polyfill like <a href="https://github.com/zloirock/core-js"><code>core-js</code></a> individually. We may work towards including this as separate files in <code>@babel/polyfill</code> soon.</p>
<h2><a class="anchor" aria-hidden="true" id="usage-in-node--browserify--webpack"></a><a href="#usage-in-node--browserify--webpack" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage in Node / Browserify / Webpack</h2>
<p>To include the polyfill you need to require it at the top of the <strong>entry point</strong> to your application.</p>
<blockquote>
<p>Make sure it is called before all other code/require statements!</p>
</blockquote>
<pre><code class="hljs css language-js"><span class="hljs-built_in">require</span>(<span class="hljs-string">"@babel/polyfill"</span>);
</code></pre>
<p>If you are using ES6's <code>import</code> syntax in your application's <strong>entry point</strong>, you
should instead import the polyfill at the top of the <strong>entry point</strong> to ensure the
polyfills are loaded first:</p>
<pre><code class="hljs css language-js"><span class="hljs-keyword">import</span> <span class="hljs-string">"@babel/polyfill"</span>;
</code></pre>
<p>With webpack, there are multiple ways to include the polyfills:</p>
<ul>
<li><p>When used alongside <a href="/docs/en/babel-preset-env"><code>@babel/preset-env</code></a>,</p>
<ul>
<li><p>If <code>useBuiltIns: 'usage'</code> is specified in <code>.babelrc</code> then do not include <code>@babel/polyfill</code> in either <code>webpack.config.js</code> entry array nor source. Note, <code>@babel/polyfill</code> still needs to be installed.</p></li>
<li><p>If <code>useBuiltIns: 'entry'</code> is specified in <code>.babelrc</code> then include <code>@babel/polyfill</code> at the top of the entry point to your application via <code>require</code> or <code>import</code> as discussed above.</p></li>
<li><p>If <code>useBuiltIns</code> key is not specified or it is explicitly set with <code>useBuiltIns: false</code> in your .babelrc, add <code>@babel/polyfill</code> directly to the entry array in your <code>webpack.config.js</code>.</p></li>
</ul></li>
</ul>
<pre><code class="hljs css language-js"><span class="hljs-built_in">module</span>.exports = {
  <span class="hljs-attr">entry</span>: [<span class="hljs-string">"@babel/polyfill"</span>, <span class="hljs-string">"./app/js"</span>],
};
</code></pre>
<ul>
<li>If <a href="/docs/en/babel-preset-env"><code>@babel/preset-env</code></a> is not used then add <code>@babel/polyfill</code> to webpack entry array as discussed above. It can still be added at the top of the entry point to application via <code>import</code> or <code>require</code>, but this is not recommended.</li>
</ul>
<blockquote>
<p>We do not recommend that you import the whole polyfill directly: either try the <code>useBuiltIns</code> options or import only the polyfills you need manually (either from this package or somewhere else).</p>
</blockquote>
<h2><a class="anchor" aria-hidden="true" id="usage-in-browser"></a><a href="#usage-in-browser" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage in Browser</h2>
<p>Available from the <code>dist/polyfill.js</code> file within a <code>@babel/polyfill</code> npm release.
This needs to be included <strong>before</strong> all your compiled Babel code. You can either
prepend it to your compiled code or include it in a <code>&lt;script&gt;</code>
before it.</p>
<p><strong>NOTE:</strong> Do not <code>require</code> this via browserify etc, use <code>@babel/polyfill</code>.</p>
<h2><a class="anchor" aria-hidden="true" id="details"></a><a href="#details" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Details</h2>
<blockquote>
<h5><a class="anchor" aria-hidden="true" id="if-you-are-looking-for-something-that-wont-modify-globals-to-be-used-in-a-toollibrary-checkout-the-transform-runtimedocsenbabel-plugin-transform-runtime-plugin-this-means-you-wont-be-able-to-use-the-instance-methods-mentioned-above-like-arrayprototypeincludes"></a><a href="#if-you-are-looking-for-something-that-wont-modify-globals-to-be-used-in-a-toollibrary-checkout-the-transform-runtimedocsenbabel-plugin-transform-runtime-plugin-this-means-you-wont-be-able-to-use-the-instance-methods-mentioned-above-like-arrayprototypeincludes" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>If you are looking for something that won't modify globals to be used in a tool/library, checkout the <a href="/docs/en/babel-plugin-transform-runtime"><code>transform-runtime</code></a> plugin. This means you won't be able to use the instance methods mentioned above like <code>Array.prototype.includes</code>.</h5>
</blockquote>
<p>Note: Depending on what ES2015 methods you actually use, you may not need to use <code>@babel/polyfill</code> or the runtime plugin. You may want to only <a href="https://github.com/zloirock/core-js#commonjs-api">load the specific polyfills you are using</a> (like <code>Object.assign</code>) or just document that the environment the library is being loaded in should include certain polyfills.</p>
</span></div></article></div><div class="docs-prevnext"><a class="docs-prev button" href="/docs/en/babel-cli"><span class="arrow-prev">← </span><span>@babel/cli</span></a><a class="docs-next button" href="/docs/en/babel-plugin-transform-runtime"><span>@babel/plugin-transform-runtime</span><span class="arrow-next"> →</span></a></div></div></div><nav class="onPageNav"><ul class="toc-headings"><li><a href="#installation">Installation</a></li><li><a href="#size">Size</a></li><li><a href="#tc39-proposals">TC39 Proposals</a></li><li><a href="#usage-in-node--browserify--webpack">Usage in Node / Browserify / Webpack</a></li><li><a href="#usage-in-browser">Usage in Browser</a></li><li><a href="#details">Details</a></li></ul></nav></div><footer class="nav-footer" id="footer"><section class="sitemap"><a href="/" class="nav-home"><img src="https://d33wubrfki0l68.cloudfront.net/7a197cfe44548cc1a3f581152af70a3051e11671/78df8/img/babel.svg" alt="Babel" width="66" height="58"/></a><div><h5>Docs</h5><a href="/docs/en/learn.html">Learn ES2015</a></div><div><h5>Community</h5><a href="/en/videos.html">Videos</a><a href="/en/users.html">User Showcase</a><a href="http://stackoverflow.com/questions/tagged/babeljs" rel="noopener noreferrer" target="_blank">Stack Overflow</a><a href="https://babeljs.slack.com/">Slack Channel</a><a href="https://twitter.com/babeljs" rel="noopener noreferrer" target="_blank">Twitter</a></div><div><h5>More</h5><a href="/blog">Blog</a><a href="https://github.com/babel">GitHub Org</a><a href="https://github.com/babel/babel">GitHub Repo</a><a href="https://github.com/babel/website">Website Repo</a><a href="https://old.babeljs.io">Old 6.x Site</a><a href="http://henryzoo.com/babel.github.io">Old 5.x Site</a></div></section></footer></div><script type="text/javascript" src="https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.js"></script><script>
                document.addEventListener('keyup', function(e) {
                  if (e.target !== document.body) {
                    return;
                  }
                  // keyCode for '/' (slash)
                  if (e.keyCode === 191) {
                    const search = document.getElementById('search_input_react');
                    search && search.focus();
                  }
                });
              </script><script>
              var search = docsearch({
                
                apiKey: 'd42906b043c5422ea07b44fd49c40a0d',
                indexName: 'babeljs',
                inputSelector: '#search_input_react'
              });
            </script></body></html>